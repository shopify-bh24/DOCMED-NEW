<style>

  @media screen and (max-width: 450px) {
    .button:has(.cus-card-svg){
      padding: 8px !important;
    }
  } 
</style>

{% comment %}
    Renders a list of product's price (regular, sale)
    Accepts:
    - product: {Object} Product Liquid object (optional)
    - use_variant: {Boolean} Renders selected or first variant price instead of overall product pricing (optional)
    - show_badges: {Boolean} Renders 'Sale' and 'Sold Out' tags if the product matches the condition (optional)
    - price_class: {String} Adds a price class to the price element (optional)
    - allow_add_cart: {Boolean} Controls whether Add-to-Cart button should render (optional, default false)
    Usage:
    {% render 'price', product: product, allow_add_cart: true %}
{% endcomment %}

{%- liquid
  assign allow_add_cart = allow_add_cart | default: false

  if use_variant
    assign target = product.selected_or_first_available_variant
  else
    assign target = product
  endif

  assign compare_at_price = target.compare_at_price
  assign price = target.price | default: 40300
  assign price_min = product.price_min
  assign price_max = product.price_max
  assign available = target.available | default: false
  assign money_price = price | money
  assign money_price_min = price_min | money
  assign money_price_max = price_max | money

  if settings.currency_code_enabled
    assign money_price = price | money_with_currency
    assign money_price_min = price_min | money_with_currency
    assign money_price_max = price_max | money_with_currency
  endif
-%}

{% comment %} 
if product.price_varies
		assign money_price = 'products.product.price.from_price_html' | t: price: money_price
	endif
{% endcomment %}
{% if from_varies and product.price_varies %}
  {% assign money_price = 'products.product.price.from_price_html' | t: price: money_price %}
{% endif %}
<div class="price price__container {% if card__default_price %} card__default_price {% endif %}
  {%- if price_class %} {{ price_class }}{% endif -%}
  {%- if available == false %} price--sold-out {% endif -%}
  {%- if compare_at_price > price and product.quantity_price_breaks_configured? != true %} price--on-sale show_badge{% endif -%}
  {%- if compare_at_price > price and product.quantity_price_breaks_configured? %} volume-pricing--sale-badge{% endif -%}
  {%- if product.price_varies == false and product.compare_at_price_varies %} price--no-compare{% endif -%}
  {%- if show_badges %} price--show-badge{% endif -%}">
		<div class="price__regular">
      {%- if product.quantity_price_breaks_configured? -%}
        {%- if show_compare_at_price -%}
          {%- unless product.price_varies == false and product.compare_at_price_varies %}
              <span class="price-item price-item--regular variant-item__old-price">
                {% if settings.currency_code_enabled %}
                  {% if compare_at_price != 0 %}
                    {{ compare_at_price | money_with_currency }}
                  {% endif %}
                {% else %}
                  {% if compare_at_price != 0 %}
                    {{ compare_at_price | money }}
                  {% endif %}
                {% endif %}
              </span>
          {%- endunless -%}
        {%- endif -%}
        <span class="price-item price-item--regular">{{- 'products.product.volume_pricing.price_range' | t: minimum: money_price_min, maximum: money_price_max -}}</span>
      {%- else -%}
        <span class="price-item price-item--regular">{{ money_price }}</span>
      {%- endif -%}

      {% comment %} {% if allow_add_cart and product.selected_or_first_available_variant %}
        <form method="post" action="/cart/add" class="product-card-form">
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
        <input type="hidden" name="quantity" value="1">
        <button 
          type="submit"
          name="add"
          formaction="/cart"
          class="header_search_add_to_cart_button add-to-cart__submit button button--primary "
          aria-label="{{ 'products.product.add_to_cart' | t }}"
        >
          <span class="cus-card-svg">
            <svg viewBox="0 0 24 24" fill="none">
              <path d="M12 5V19" stroke="#212121" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path>
              <path d="M5 12H19" stroke="#212121" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></path>
            </svg>
          </span>
        </button>
      </form>
      
      {% endif %} {% endcomment %}
      
      
    </div>
		<div class="price__sale">
			<span class="price-item price-item--sale price-item--last">
        {{ money_price }}
      </span>
			{%- if money_price != compare_at_price %}
          <small class="price-item price-item--regular">
            {% if settings.currency_code_enabled %}
              {% if compare_at_price != 0 %}
                {{ compare_at_price | money_with_currency }}
              {% endif %}
            {% else %}
              {% if compare_at_price != 0 %}
                {{ compare_at_price | money }}
              {% endif %}
            {% endif %}
          </small>
			{%- endif -%}
		</div>
    {% if product.selected_or_first_available_variant.unit_price_measurement %}
  		<small class="unit-price price-item price-item--last caption{% if product.selected_or_first_available_variant.unit_price_measurement == nil %} hidden{% endif %}">
          <span class="cardunitp">{{- product.selected_or_first_available_variant.unit_price | money -}}</span>
          <span aria-hidden="true">/</span>
          <span class="cardunitv">
            {%- if product.selected_or_first_available_variant.unit_price_measurement.reference_value != 1 -%}
  	          {{- product.selected_or_first_available_variant.unit_price_measurement.reference_value -}}
            {%- endif -%}
  	        {{ product.selected_or_first_available_variant.unit_price_measurement.reference_unit }}
          </span>
  		</small>
    {% endif %}
</div>

<script>
  document.addEventListener('click', function(e) {
    const button = e.target.closest('.add-to-cart__submit');
    if (!button) return;

    e.preventDefault();

    const form = button.closest('form');
    const variantId = form?.querySelector('input[name="id"]')?.value;
    if (!variantId) return;

    fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: variantId, quantity: 1 })
    })
    .then(() => {
      // Redirect to cart page after successful add
      window.location.href = '/cart';
    })
    .catch(err => console.error('Error adding to cart:', err));
  });


</script>